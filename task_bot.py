import telebot
import os

# GitHub Secrets ‡¶•‡ßá‡¶ï‡ßá Bot Token ‡¶®‡ßá‡¶¨‡ßá
API_TOKEN = os.getenv("BOT_TOKEN")

bot = telebot.TeleBot(API_TOKEN)

# /start command
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "‡¶Ü‡¶∏‡¶∏‡¶æ‡¶≤‡¶æ‡¶Æ‡ßÅ ‡¶Ü‡¶≤‡¶æ‡¶á‡¶ï‡ßÅ‡¶Æ! ‚úÖ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ Task Manager Bot GitHub Actions ‡¶•‡ßá‡¶ï‡ßá ‡¶ö‡¶≤‡¶õ‡ßá üöÄ")

# /help command
@bot.message_handler(commands=['help'])
def send_help(message):
    bot.reply_to(message, "Available commands:\n/start - Welcome\n/help - Help\n/echo <text> - Echo back")

# /echo command
@bot.message_handler(commands=['echo'])
def echo_message(message):
    text = message.text.replace("/echo", "").strip()
    if text:
        bot.reply_to(message, f"‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶≤‡¶ø‡¶ñ‡ßá‡¶õ‡ßã: {text}")
    else:
        bot.reply_to(message, "‚ö†Ô∏è ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶≤‡¶ø‡¶ñ‡ßá ‡¶¶‡¶æ‡¶ì /echo ‡¶è‡¶∞ ‡¶™‡¶∞‡ßá‡•§")

# fallback
@bot.message_handler(func=lambda message: True)
def echo_all(message):
    bot.reply_to(message, f"‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶≤‡¶ø‡¶ñ‡ßá‡¶õ‡ßã: {message.text}")

if __name__ == "__main__":
    bot.remove_webhook()  # webhook conflict avoid ‡¶ï‡¶∞‡¶¨‡ßá
    bot.polling(non_stop=True)
